/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var src_proto3_timestamp_pb = require('../../src/proto3/timestamp_pb.js');
goog.exportSymbol('proto.DeviceEvent', null, global);
goog.exportSymbol('proto.DeviceRecord', null, global);
goog.exportSymbol('proto.DeviceRecord.RecordType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DeviceRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.DeviceRecord.oneofGroups_);
};
goog.inherits(proto.DeviceRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DeviceRecord.displayName = 'proto.DeviceRecord';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.DeviceRecord.oneofGroups_ = [[5,6,7,8,9,10,11,12,13]];

/**
 * @enum {number}
 */
proto.DeviceRecord.RecordValueCase = {
  RECORD_VALUE_NOT_SET: 0,
  DOUBLEVALUE: 5,
  FLOATVALUE: 6,
  INT32VALUE: 7,
  INT64VALUE: 8,
  UINT32VALUE: 9,
  UINT64VALUE: 10,
  BOOLVALUE: 11,
  STRINGVALUE: 12,
  BYTESTRINGVALUE: 13
};

/**
 * @return {proto.DeviceRecord.RecordValueCase}
 */
proto.DeviceRecord.prototype.getRecordValueCase = function() {
  return /** @type {proto.DeviceRecord.RecordValueCase} */(jspb.Message.computeOneofCase(this, proto.DeviceRecord.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DeviceRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.DeviceRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DeviceRecord} msg The msg instance to transform.
 * @return {!Object}
 */
proto.DeviceRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    key: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    date: (f = msg.getDate()) && src_proto3_timestamp_pb.Timestamp.toObject(includeInstance, f),
    doublevalue: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    floatvalue: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    int32value: jspb.Message.getFieldWithDefault(msg, 7, 0),
    int64value: jspb.Message.getFieldWithDefault(msg, 8, 0),
    uint32value: jspb.Message.getFieldWithDefault(msg, 9, 0),
    uint64value: jspb.Message.getFieldWithDefault(msg, 10, 0),
    boolvalue: jspb.Message.getFieldWithDefault(msg, 11, false),
    stringvalue: jspb.Message.getFieldWithDefault(msg, 12, ""),
    bytestringvalue: msg.getBytestringvalue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DeviceRecord}
 */
proto.DeviceRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DeviceRecord;
  return proto.DeviceRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DeviceRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DeviceRecord}
 */
proto.DeviceRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 3:
      var value = /** @type {!proto.DeviceRecord.RecordType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = new src_proto3_timestamp_pb.Timestamp;
      reader.readMessage(value,src_proto3_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoublevalue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloatvalue(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInt32value(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt64value(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUint32value(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUint64value(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolvalue(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringvalue(value);
      break;
    case 13:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytestringvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DeviceRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DeviceRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DeviceRecord} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.DeviceRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      src_proto3_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBytes(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.DeviceRecord.RecordType = {
  DOUBLE: 0,
  FLOAT: 1,
  INT32: 2,
  INT64: 3,
  UINT32: 4,
  UINT64: 5,
  BOOL: 6,
  STRING: 7,
  BYTES: 8
};

/**
 * optional uint32 deviceId = 1;
 * @return {number}
 */
proto.DeviceRecord.prototype.getDeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DeviceRecord.prototype.setDeviceid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.DeviceRecord.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.DeviceRecord.prototype.setKey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional RecordType type = 3;
 * @return {!proto.DeviceRecord.RecordType}
 */
proto.DeviceRecord.prototype.getType = function() {
  return /** @type {!proto.DeviceRecord.RecordType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.DeviceRecord.RecordType} value */
proto.DeviceRecord.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.DeviceRecord.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, src_proto3_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.DeviceRecord.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.DeviceRecord.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double doubleValue = 5;
 * @return {number}
 */
proto.DeviceRecord.prototype.getDoublevalue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.DeviceRecord.prototype.setDoublevalue = function(value) {
  jspb.Message.setOneofField(this, 5, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearDoublevalue = function() {
  jspb.Message.setOneofField(this, 5, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasDoublevalue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float floatValue = 6;
 * @return {number}
 */
proto.DeviceRecord.prototype.getFloatvalue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.DeviceRecord.prototype.setFloatvalue = function(value) {
  jspb.Message.setOneofField(this, 6, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearFloatvalue = function() {
  jspb.Message.setOneofField(this, 6, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasFloatvalue = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 int32Value = 7;
 * @return {number}
 */
proto.DeviceRecord.prototype.getInt32value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.DeviceRecord.prototype.setInt32value = function(value) {
  jspb.Message.setOneofField(this, 7, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearInt32value = function() {
  jspb.Message.setOneofField(this, 7, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasInt32value = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 int64Value = 8;
 * @return {number}
 */
proto.DeviceRecord.prototype.getInt64value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.DeviceRecord.prototype.setInt64value = function(value) {
  jspb.Message.setOneofField(this, 8, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearInt64value = function() {
  jspb.Message.setOneofField(this, 8, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasInt64value = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 uint32Value = 9;
 * @return {number}
 */
proto.DeviceRecord.prototype.getUint32value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.DeviceRecord.prototype.setUint32value = function(value) {
  jspb.Message.setOneofField(this, 9, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearUint32value = function() {
  jspb.Message.setOneofField(this, 9, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasUint32value = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint64 uint64Value = 10;
 * @return {number}
 */
proto.DeviceRecord.prototype.getUint64value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.DeviceRecord.prototype.setUint64value = function(value) {
  jspb.Message.setOneofField(this, 10, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearUint64value = function() {
  jspb.Message.setOneofField(this, 10, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasUint64value = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool boolValue = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.DeviceRecord.prototype.getBoolvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.DeviceRecord.prototype.setBoolvalue = function(value) {
  jspb.Message.setOneofField(this, 11, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearBoolvalue = function() {
  jspb.Message.setOneofField(this, 11, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasBoolvalue = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string stringValue = 12;
 * @return {string}
 */
proto.DeviceRecord.prototype.getStringvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.DeviceRecord.prototype.setStringvalue = function(value) {
  jspb.Message.setOneofField(this, 12, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearStringvalue = function() {
  jspb.Message.setOneofField(this, 12, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasStringvalue = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bytes byteStringValue = 13;
 * @return {!(string|Uint8Array)}
 */
proto.DeviceRecord.prototype.getBytestringvalue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * optional bytes byteStringValue = 13;
 * This is a type-conversion wrapper around `getBytestringvalue()`
 * @return {string}
 */
proto.DeviceRecord.prototype.getBytestringvalue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytestringvalue()));
};


/**
 * optional bytes byteStringValue = 13;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytestringvalue()`
 * @return {!Uint8Array}
 */
proto.DeviceRecord.prototype.getBytestringvalue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytestringvalue()));
};


/** @param {!(string|Uint8Array)} value */
proto.DeviceRecord.prototype.setBytestringvalue = function(value) {
  jspb.Message.setOneofField(this, 13, proto.DeviceRecord.oneofGroups_[0], value);
};


proto.DeviceRecord.prototype.clearBytestringvalue = function() {
  jspb.Message.setOneofField(this, 13, proto.DeviceRecord.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceRecord.prototype.hasBytestringvalue = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DeviceEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DeviceEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.DeviceEvent.displayName = 'proto.DeviceEvent';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DeviceEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.DeviceEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DeviceEvent} msg The msg instance to transform.
 * @return {!Object}
 */
proto.DeviceEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    targetdeviceid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    date: (f = msg.getDate()) && src_proto3_timestamp_pb.Timestamp.toObject(includeInstance, f),
    content: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DeviceEvent}
 */
proto.DeviceEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DeviceEvent;
  return proto.DeviceEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DeviceEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DeviceEvent}
 */
proto.DeviceEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeviceid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTargetdeviceid(value);
      break;
    case 3:
      var value = new src_proto3_timestamp_pb.Timestamp;
      reader.readMessage(value,src_proto3_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DeviceEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DeviceEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DeviceEvent} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.DeviceEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceid();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTargetdeviceid();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      src_proto3_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 deviceId = 1;
 * @return {number}
 */
proto.DeviceEvent.prototype.getDeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.DeviceEvent.prototype.setDeviceid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 targetDeviceId = 2;
 * @return {number}
 */
proto.DeviceEvent.prototype.getTargetdeviceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.DeviceEvent.prototype.setTargetdeviceid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.DeviceEvent.prototype.getDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, src_proto3_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.DeviceEvent.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.DeviceEvent.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.DeviceEvent.prototype.hasDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.DeviceEvent.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.DeviceEvent.prototype.setContent = function(value) {
  jspb.Message.setField(this, 4, value);
};


goog.object.extend(exports, proto);
